@tailwind base;
@tailwind components;
@tailwind utilities;

/* The @layer directive puts these on the same level as @tailwind base, useful for global defaults */
@layer base {
  /* Style stacks */
  .foreground {
    @apply 
    
    shadow-md
    border
    border-transparent

    light:bg-gray-50 
    light:text-gray-800
    
    light-AAA:bg-white
    light-AAA:text-black
    light-AAA:border-black

    dark:bg-gray-800
    dark:text-gray-100
    dark:border-transparent

    dark-AAA:bg-black
    dark-AAA:text-white
    dark-AAA:border-white;
  }

  .background {
    @apply
    
    light:bg-gray-200
    light-AAA:bg-white
    dark:bg-gray-900
    dark-AAA:bg-black;
  }
  
  html,
  body,
  #root,
  #app {
    @apply w-full h-full 
  }

  /* Add @font-face declarations here */

  h1 {
    /* The usual way */
    @apply text-3xl;
    /* A fancy new way */
    /* background: theme('colors.purple.100'); */
  }

  h2 {
    @apply text-6xl;
  }
}

/* The @components layer is useful for extracting component classes with @apply */
@layer components {
  .very-sweet-button {
    @apply py-2 px-4 bg-indigo-500 text-white font-semibold rounded-lg shadow-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-400 focus:ring-opacity-75;
  }

  .card {
    @apply mx-auto py-6 px-4 rounded-lg
    
    foreground;
  }
}

/* New utilities are placed alongside tailwind utilities and unused will be purged in prod */
@layer utilities {

  /* This directive will generate variants for each breakpoint, eg sm:pointer-none, md:pointer-none, etc */
  @variants responsive {
    .pointer-none {
      pointer-events: none;
    }
  }
}
